-# REVIEW: This logic should go in a helper

- provider = 'evernote'
- signed_in_with_evernote = user_signed_in? && current_user.authorizations.pluck(:provider).include?(provider.to_s)
- status = signed_in_with_evernote ? 'connected' : 'connect'
- active_panel = 0
- active_panel = 1 if signed_in_with_evernote
- active_panel = 3 unless @channel.notebooks.nil? && @channel.name.nil?

= form_for @channel do |f|

  fieldset.oauth

    legend class="#{ status }"
      | Connect your Evernote account
    div class= status
      - if signed_in_with_evernote
        p
          | Your Evernote account (#{ current_user.authorizations.where(provider: provider).first.nickname }) is connected.
      - else
        = link_to 'Click here to connect your Evernote account.', omniauth_authorize_path(resource_name, provider)

  fieldset class="notebooks #{ signed_in_with_evernote ? '' : 'disabled' }"
    legend class="#{ @channel.notebooks.nil? ? '' : 'completed' }"
      | Choose an Evernote notebook
    div
      - unless @channel.errors[:notebooks].empty?
        p.error = "Notebook #{ @channel.errors.messages[:notebooks].join(', ') }."

      - @evernote_notebooks_list.each do |notebook|
        = f.label :notebooks, notebook[:name], value: notebook[:guid] 
          = notebook[:name]
          = f.radio_button :notebooks, notebook[:guid], required: true

  fieldset class="name #{ signed_in_with_evernote ? '' : 'disabled' }"
    legend class="#{ @channel.name.nil? ? '' : 'completed' }"
      | Name your channel
    div
      - unless @channel.errors[:name].empty?
        p.error = "Name #{ @channel.errors.messages[:name].join(', ') }."
      label for='name'
        = f.text_field :name, autocomplete: 'off',  pattern: "[A-Za-z0-9 \+\-\?\!]{3,30}", required: true, placeholder: 'Channel name'
        div.available
          | Use between 3 and 30 alphanumeric characters.

  - if mode == 'edit'
    fieldset class="theme #{ signed_in_with_evernote ? '' : 'disabled' }"
      legend
        | Choose a theme
      div
        - if user_signed_in? && current_user.nickname == Secret.auth.evernote.username
          - @themes = ['nembrot', 'dark', 'leipzig', 'meta', 'home', 'magazine']
        - else
          - @themes = ['nembrot', 'dark', 'magazine']

        - @themes.each do |theme|
          = f.label :theme, theme, value: theme
            = theme.titlecase
            = f.radio_button :theme, theme, checked: (@channel.theme == theme || @channel.theme.nil? && theme == 'default'), required: true
  - else
    input name='channel[theme]' type='hidden' value='default'

  input name='id' type='hidden' value=@channel.id

  .actions
    = f.submit t("channels.#{ mode }.submit")

    = link_to 'My channels', channels_path, class: 'cancel', title: 'Cancel and back to My Channels' if user_signed_in? && !current_user.channels.empty?

    = link_to 'Delete', @channel, data: {confirm: 'Are you sure?'}, method: :delete, class: 'delete', title: 'Delete channel' if mode == 'edit'

javascript:
  $(function() {
    $('#dashboard form').accordion({
      header: 'fieldset:not(.disabled) legend',
      heightStyle: 'content',
      active: #{ active_panel }
    });
  });

  var thread = null;
  $('#dashboard form input[type=text]').keyup(function() {
    clearTimeout(thread);
    var target = $(this);
    thread = setTimeout(function() {
      $.ajax({
        url: '/channels/available/' + target.val(),
        cache: false,
        success: function(html) {
          return $('#dashboard .available').html(html);
        }
      });
    }, 500); 
  });

  if (#{ mode == 'edit' && @current_channel != @channel }) {
    $.pjax({url: '#{ home_path(@channel) }', container: '[data-pjax-container]'});
  }

  $('#dashboard .notebooks div').scrollTop($('#dashboard .notebooks input:checked').position().top);

  if (#{ mode == 'edit' }) {
    $('#dashboard .theme div').scrollTop($('#dashboard .theme input:checked').position().top);
    $('#dashboard .theme input:checked').focus();
  }

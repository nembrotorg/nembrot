-# Clients of this partial must supply the following variables:
-# thread
-# user

- can_subscribe = thread.can_subscribe?(user)
- can_edit = thread.can_be_edited_by?(user)

aside id="thread_#{ thread.id.to_s }"

  header
    h2
      = t('.title', count: thread.ordered_comments.size)
      = t('.closed_suffix') if thread.is_closed?

    -# REVIEW: Temporarily disabled
    -# ul.dashboard
    -#   li = render 'commontator/subscriptions/link', thread: thread, user: user if can_subscribe

    -#   - if can_edit
    -#     - is_closed = thread.is_closed?
    -#     - close_string = is_closed ? "reopen" : "close"
    -#     li = link_to close_string.capitalize, commontator.polymorphic_path([close_string, thread]), confirm: (!is_closed ? 'Are you sure you want to close this thread?' : 
    -#      nil), method: :put, id: "thread_#{thread.id.to_s}_#{close_string}_link", class: "thread_#{close_string}_link", remote: true

  - unless thread.ordered_comments.empty?
    ol.comments
      = render 'commontator/comments/list', comments: thread.ordered_comments, user: user

  h4
    - if thread.is_closed?
      = t('.closed')
    - else
      -# REVIEW
      -#= link_to t('.sign_in'), new_user_session_path unless new_user_session_path.nil?
      = link_to t('.sign_in'), '/users/sign_in'
      = link_to t('.new_comment'), commontator.new_thread_comment_path(thread), remote: true

  #new_comment
